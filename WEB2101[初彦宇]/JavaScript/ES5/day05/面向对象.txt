[对象]:
	①专门描述现实中, 一个具体客观事物的属性和功能的程序结构
	②内存中同时存储多个数据和方法的一块存储空间
	③对象是相对于变量[原始类型的值]而言的, 对象就是程序中专门存储多个值的空间, 一个变量当中可以存一个值, 而一个对象当中可以存很多个值, 也正是因为这种情况出现, 对象是引用类型的, 因为存储值的实际数量\大小未知, 栈中内存又极其有限, 稍有不慎就会溢出, 所以对象存储在堆中, 也因为堆是动态的, 更符合对象创建后进行添加属性和方法, 访问时先从栈内存中访问引用对象地址的栈地址, 然后通过栈中保存的堆地址访问实际的对象, 也叫做按引用访问

面向对象:
	在程序中, 都是先用对象来封装一个具体事务的属性和功能, 然后再调用对象的方法来执行任务
	先定义对象, 然后再按照需求去调用对象的方法

  如何使用:
    函数 和 方法 不一样,但在本质上一样,但在对象中不叫函数 叫方法, 不属于任何对象的才叫做函数  像console.log();中的log就是属于某个对象中的特定功能才叫方法\功能
    💥如何创建对象(三种方法两个场景):
		1.创建一个单独的方法:
			a.使用对象直接量:
			   var obj = {};
			   var obj1 = {};
			   obj == obj1  ------->>> false  地址值不相同, 非同一个对象
			   var obj2 = {
				   "属性名":属性值,
				   ...:...;
				   "方法名":function(...){...}
			   }
			   如何调用对象的属性/功能
			   	   对象.方法(参数)    	
			   	   对象.属性名    	 	
			   	   👆对象的属性和方法也被统称为对象的成员, 同时属性名必须加引号''这说明一点, 属性和方法名必须是字符串类型, 同时也因为他必须是字符串类型, 所以''引号可以省略, 并非天生就没有, 是因为js怕你写起来太麻烦, 告诉你可以省略
			
  问题: 对象方法中, 不能写死对象的属性值
  解决: 在对象方法中, 直接访问当前对象自己的属性
  在对象方法中如何直接使用对象自己的属性:
	  用this关键字, 专门用在对象方法中, 引用或指代正在调用方法的当前对象本身

  总结: 只要在对象的方法里访问对象自己的属性, 就必须使用this.属性名

			b.用new关键字创建:
				var obj = new Object();   创建一个空对象
				obj.属性名 = 属性值;
				obj.方法名 = function(...){...}
				obj.name="Kirigayakazuto";  // 添加名字属性
  
  js中可以认为一切对象都是关联数组
    相同点:
	   1、属性名都是字符串、不可重复
	   2、随时添加新的属性和方法
	   3、可用for in 遍历
  
  何时使用对象直接量创建：如果在创建对象时就已经非常清楚对象的所有属性和方法
  何时使用new创建对象：创建对象时暂时还不知道有哪些属性和方法，需要后续补充 
	
		2.批量创建按多个相同结构的对象
			1、定义构造函数
				构造函数：专门定义一类对象相同结构的特殊函数。
				何时使用：只要反复创建多个相同结构的对象前，都要使用构造函数，先定义统一的结构
				如何定义：构造函数其实就是普通的函数
				function 类型名/构造函数名(属性参数,...){
					this.属性名=属性参数;
					this.方法名=function（...）{
						....
					}
				}
				this：指代当前正在创建的空对象

	
高阶函数:变量可以指向函数,函数可以赋值给变量,函数名是指向函数的变量,函数的参数能接收变量,那么一个函数就可以接受另一个函数作为参数,这种函数就称之为高阶函数

